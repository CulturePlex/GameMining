var GraphExtractor = {
  //Freebase Extractor Variables:
  name: "",
  type: "",
  search: function () {
    GraphExtractor.name = $('#query')[0].value;
    jQuery.get("https://www.googleapis.com/freebase/v1/mqlread", 'query= [{"name":"' + GraphExtractor.name + '","type":[]}]', function (data) {
      GraphExtractor.showTypes(data.result);
    });
  },
  get: function () {
    GraphExtractor.type = $('#type_select_from').val();
    GraphExtractor.name = $('#query')[0].value;
    var array = $('#query')[0].value.split(',');
    for(var i=0;i<array.length;i++) {
        var query={
            "name": array[i] ,
            "type": GraphExtractor.type ,
            "*":null
        };
        var key= 'AIzaSyAJHbWeXtvKBJkZUE6KFjr8Ey43chdw6X4';
        var params = {
          'key': key,
          'query': JSON.stringify(query)
        };
        $.getJSON('https://www.googleapis.com/freebase/v1/mqlread' + '?callback=?', params, function(response) {
          console.log(response);
          GraphExtractor.setGraph(response.result,false);
      });
    }

  },
  getRec: function () {
    GraphExtractor.type = $('#type_select_from').val();
    GraphExtractor.name = $('#query')[0].value;
    jQuery.get("https://www.googleapis.com/freebase/v1/mqlread", 'query={"name":"' + GraphExtractor.name + '","type":"' + GraphExtractor.type +'","*":[{}]}', function (data) {
      console.log(data);
      GraphExtractor.setGraphRec(data.result,true);
    });
  },
  getStar: function (name,type,time) {
    setTimeout(function(){
        console.log('pidiendo nombre '+ name + ' yipo '+ type);
        jQuery.get("https://www.googleapis.com/freebase/v1/mqlread", 'query={"name":"' + name + '","type":"' + type +'","*":null}', function (data) {
          console.log('montando estrella');
          console.log(data);
          GraphExtractor.setGraph(data.result,false);
        });
    },time);
  },
  init: function () {
  },
  showTypes: function (result) {
    $('#type_select_from').empty();
    $.each(result, function (k, v) {
      if (v.type instanceof Array)
      {
        for (var obj in v.type)
        {
          if (v.type[obj] !== "/common/topic" && v.type[obj] !== "/media_common/cataloged_instance")
          {
            $("#type_select_from").append('<option value=' + v.type[obj] + '>' + v.type[obj] + '</option>');
          }
        }
      }
    });
  },
  //*=[{}]
  setGraphRec: function (result,r) {
    var origin = GraphManager.graph.node({ "name" : result.name , "type" : GraphExtractor.type});
    var node;
    var time=1000;
    console.log(result);
    for (var i in result) {
        for (var j in result[i])
        {
              if(result[i][j].type)
              {
                console.log(result[i][j].name);
                console.log(result[i][j].type[0]);
                node = GraphManager.graph.node({ "name" : result[i][j].name , "type" : result[i][j].type[0]});
                var rel = GraphManager.graph.rel(origin, {"name" : result[i][j].type[0] }, node);
                console.log(rel);
                console.log('entrando');
                GraphExtractor.getStar(result[i][j].name,result[i][j].type[0],time);
                time+=500;
              }
        }
    }
  },


  //*=null
  setGraph: function (result,r) {
    var origin = GraphManager.graph.node({ "name" : result.name , "type" : GraphExtractor.type});
    var node;
    var time=1000;
    console.log(result);
    $.each(result, function (k, v) {
        if (k !== "name" && k !== "key" && k !== "guid" && k !== "mid" && k !== "id" && k !== "permission" && k !== "timestamp")
        {
          if (v instanceof Array)
          {
            for (var obj in v)
            {
              console.log(k);
              if(v[obj] != null)
              {
                node = GraphManager.graph.node({ "name" : v[obj] , "type" : k});
                console.log(node);
                var rel2 = GraphManager.graph.rel(origin, k , node);
                rel2.then(function(relationship) {
                  console.log(relationship.getSelf());
                  GraphManager.relationships.push(relationship.getSelf());
                  });
              }
            }
          } else
          {
            if (v != null)
            {

              node = GraphManager.graph.node({ "name" : v , "type" : k});
              console.log(node);
              var rel = GraphManager.graph.rel(origin, k , node);
              rel.then(function(relationship) {
                console.log(relationship);
                GraphManager.relationships.push(relationship.getSelf());
                });

            }
          }
        }
    });
  }
};

